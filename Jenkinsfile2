pipeline{
 agent any
  tools{
    maven 'Maven'
  }
environment {
        JOB NAME="${JOB_NAME}"
        BUILD NUMBER="${BUILD_NUMBER}"
    }
  stages{
    stage('Initialize'){
      steps{
        sh '''      echo "Job Name: ${JOB_NAME}"
                    echo "Build Number: ${BUILD_NUMBER}"
           '''
          }
      }
   stage ('Build') {
      steps {
      sh 'mvn clean package'
      }
   }
  stage ('MOVING ARTIFACTS TO ANSIBLE') {
    steps{
      sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '//home//ansadmin//playbook', remoteDirectorySDF: false, removePrefix: '/webapp/target', sourceFiles: '**/*.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
    }
  }
 stage ('MOVING DOCKERFILE TO ANSIBLE') {
    steps{
     sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '//home//ansadmin//playbook', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'Dockerfile')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)]) 
  }
}
 stage ('BUILD DOCKER IMAGE') {
    steps{
   sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''cd /home/ansadmin/playbook 
   docker build -t $JOB NAME:v1.$BUILD NUMBER . .''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
    }
  }
}
}


