pipeline{
 agent any
  tools{
    maven 'Maven'
  }
 environment {
	DOCKERHUB_CREDENTIALS=credentials('dockerhub')
    }
  stages{
    stage('Initialize'){
      steps{
        sh '''       echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
            '''
          }
      }
    stage ('Build') {
      steps {
      sh 'mvn clean package'
      }
   }
  stage ('MOVING ARTIFACTS TO ANSIBLE') {
    steps{
      sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '//home//ansadmin//playbook', remoteDirectorySDF: false, removePrefix: '/webapp/target', sourceFiles: '**/*.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
    }
  }
stage ('MOVING Dockerfile TO ANSIBLE') {
    steps{
    sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''docker image rm -f yaswanth_demo
    cd /home/ansadmin/playbook
     docker build -t yaswanth650/$JOB_NAME:v1.$BUILD_ID . 
     docker build -t yaswanth650/$JOB_NAME:latest .
     ''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '//home//ansadmin//playbook', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'Dockerfile')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
      }
    }
    stage('Login and push') {
	 steps{
	      sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
               docker push yaswanth650/$JOB_NAME:v1.$BUILD_ID
               docker push yaswanth650/$JOB_NAME:latest
               ''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
	 }
    }
}
}
